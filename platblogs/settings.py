"""
Django settings for platblogs project.

Generated by 'django-admin startproject' using Django 3.1.10.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
# from dotenv import load_dotenv
# load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4*c++lw6(j9&v30q@0u4$$t1=mrlgy57k12p#0%w#yw^z*dz)u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG =  TEMPLATE_DEBUG = True
#DEBUG = int(os.getenv("DEBUG"), 0)
# SECRET_KEY = os.getenv("SECRET_KEY")
ALLOWED_HOSTS = ['*']#'192.168.30.129', '127.0.0.1', 'localhost']


# Application definition

INSTALLED_APPS = [
    'blog.apps.BlogConfig',   # 注册基本应用
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',   # static 静态文件站
    'django.contrib.sites',  # admin 管理页面

    'allauth', # < here
    'allauth.account', # < here
    'allauth.socialaccount', # < here
    'taggit',  # 标签
    'imagekit',  # 图形工具
]
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # new
SITE_ID = 1   # new
LOGIN_REDIRECT_URL = '/'  # < here 认证路由起始点
MEDIA_URL = '/media/'  # for image
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # for image

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware',  # 白名单
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', # 跨域资源访问
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ORIGIN_WHITELIST = (
        'http://192.168.30.129:1999',
        'http://192.168.30.129:2001',
        'http://192.168.30.129:3000',
        'http://localhost:8000',)
ROOT_URLCONF = 'platblogs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 最近更新的 博客内容
                'blog.context_processors.latest_posts',
            ],
        },
    },
]

WSGI_APPLICATION = 'platblogs.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [# < here
        os.path.join(BASE_DIR, 'static'),
        ]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
ENV = os.getenv("ENV", 'production')
if ENV == 'production':
    ALLOWED_HOSTS = ['*']
    DATABASES = DATABASES
    #{ 'default': {
    #   'ENGINE': 'django.db.backends.mysql', 
    #   'NAME': os.getenv('DB_NAME', ''),
    #   'USER': os.getenv('DB_USER', ''),
    #   'PASSWORD': os.getenv('DB_PASSWORD', ''),
    #   'HOST': os.getenv('DB_HOST', ''),
    #   'PORT': '', } 
    #   }
